{"version":3,"file":"component---src-pages-index-tsx-223286ffa943b8d95b8c.js","mappings":"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","sources":["webpack://example/./src/pages/index.tsx","webpack://example/../gatsby-theme-adr/src/components/AdrStats.tsx"],"sourcesContent":["import React, { PropsWithChildren } from 'react';\n\nimport PageTitle from '@lullabot/gatsby-theme-adr/src/components/PageTitle';\n\nimport Layout from '@lullabot/gatsby-theme-adr/src/components/layout/Layout';\nimport { SiteMetadata } from '@lullabot/gatsby-theme-adr/src/types';\n\nimport { graphql, PageProps } from 'gatsby';\nimport AdrStats, {\n  AdrStatsProps,\n} from '@lullabot/gatsby-theme-adr/src/components/AdrStats';\nimport SEO from '@lullabot/gatsby-theme-adr/src/components/SEO';\n\nexport const query = graphql`\n  query PageQuery {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMdx {\n      edges {\n        node {\n          frontmatter {\n            tags\n            deciders\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = () => <SEO />;\n\nconst HomePage = (\n  props: PropsWithChildren<\n    PageProps<{\n      allMdx: { edges: AdrStatsProps['adrs'] };\n      site: { siteMetadata: Partial<SiteMetadata> };\n    }>\n  >,\n) => {\n  const {\n    allMdx: { edges: adrs },\n    site: {\n      siteMetadata: { title, description },\n    },\n  } = props.data;\n  return (\n    <Layout {...props}>\n      <PageTitle deck={description} preTitle=\"ADR\">\n        {title}\n      </PageTitle>\n      <section\n        aria-labelledby=\"primary-heading\"\n        className=\"min-w-0 flex-1 flex flex-col lg:order-last relative py-16 px-4 xl:px-0 bg-white overflow-hidden font-serif prose lg:prose-xl 1 mx-auto max-w-prose prose-a:text-blue-600 prose-headings:font-sans\"\n      >\n        <AdrStats adrs={adrs} />\n        <h2 id=\"definition-and-purpose\">Definition and purpose</h2>\n        <blockquote>\n          <p>\n            An Architectural Decision (AD) is a software design choice that\n            addresses a functional or non-functional requirement that is\n            architecturally significant. An Architectural Decision Record (ADR)\n            captures a single AD, such as often done when writing personal notes\n            or meeting minutes; the collection of ADRs created and maintained in\n            a project constitutes its decision log.\n          </p>\n        </blockquote>\n        <p>\n          An ADR is immutable once accepted, beyond simple fixes and\n          improvements that don‚Äôt change the substance of the decision.\n          Otherwise, only its status can change (i.e., become deprecated or\n          superseded). That way, you can become familiar with the whole project\n          history just by reading its decision log in chronological order.\n          Moreover, maintaining this documentation aims at:\n        </p>\n        <ul>\n          <li>\n            üöÄ Improving and speeding up the onboarding of a new team member\n          </li>\n          <li>\n            üî≠ Avoiding blind acceptance/reversal of a past decision (cf{' '}\n            <a href=\"https://cognitect.com/blog/2011/11/15/documenting-architecture-decisions.html\">\n              Michael Nygard‚Äôs famous article on ADRs\n            </a>\n            )\n          </li>\n          <li>ü§ù Formalizing the decision process of the team</li>\n        </ul>\n        <h2 id=\"usage\">Usage</h2>\n        <p>\n          This website is automatically updated after a change on the{' '}\n          <code>main</code> branch of the project‚Äôs Git repository. In fact, the\n          developers manage this documentation directly with markdown files\n          located next to their code, so it is more convenient for them to keep\n          it up-to-date. You can browse the ADRs by using the left menu or the\n          search bar.\n        </p>\n        <p>\n          The decision process is entirely collaborative and backed by pull\n          requests.\n        </p>\n        <h2 id=\"more-information\">More information</h2>\n        <ul>\n          <li>\n            <a href=\"https://github.com/thomvaill/log4brains/tree/master#readme\">\n              Log4brains documentation\n            </a>\n          </li>\n          <li>\n            <a href=\"https://github.com/thomvaill/log4brains/tree/master#-what-is-an-adr-and-why-should-you-use-them\">\n              What is an ADR and why should you use them\n            </a>\n          </li>\n          <li>\n            <a href=\"https://adr.github.io/\">ADR GitHub organization</a>\n          </li>\n        </ul>\n      </section>\n    </Layout>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nexport type AdrStatsProps = {\n  adrs: {\n    node: {\n      frontmatter: {\n        deciders?: string[];\n        tags?: string[];\n      };\n    };\n  }[];\n  to?: string;\n};\nexport default function AdrStats({ adrs, to }: AdrStatsProps) {\n  const stats = [\n    { name: 'ADRs', stat: adrs.length },\n    {\n      name: 'Collaborators',\n      stat: adrs.reduce((unique, adr) => {\n        (adr.node.frontmatter.deciders || []).forEach((decider) =>\n          unique.add(decider.toLowerCase()),\n        );\n        return unique;\n      }, new Set()).size,\n    },\n    {\n      name: 'Disciplines',\n      stat: adrs.reduce((unique, adr) => {\n        (adr.node.frontmatter.tags || []).forEach((decider) =>\n          unique.add(decider.toLowerCase()),\n        );\n        return unique;\n      }, new Set()).size,\n    },\n  ];\n  return (\n    <div className=\"container mb-5 mx-auto px-4 sm:px-6 lg:px-8 font-sans\">\n      <dl className=\"mt-5 grid grid-cols-1 gap-5 sm:grid-cols-3\">\n        {stats.map(({ name, stat }) => (\n          <Link\n            to={to ? to : '/adrs'}\n            key={name}\n            className=\"px-4 py-5 bg-white shadow rounded-lg overflow-hidden sm:p-6 no-underline\"\n          >\n            <dt className=\"text-sm font-medium text-gray-500 truncate\">\n              {name}\n            </dt>\n            <dd className=\"mt-1 text-3xl font-semibold text-gray-900\">\n              <span className=\"font-bold\">{stat}</span>\n            </dd>\n          </Link>\n        ))}\n      </dl>\n    </div>\n  );\n}\n"],"names":["Head","_jsx","SEO","props","allMdx","edges","adrs","site","siteMetadata","title","description","data","_jsxs","Layout","children","PageTitle","deck","preTitle","className","AdrStats","id","href","to","stats","name","stat","length","reduce","unique","adr","node","frontmatter","deciders","forEach","decider","add","toLowerCase","Set","size","tags","map","_ref2","Link"],"sourceRoot":""}